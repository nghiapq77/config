### Config
set -g prefix C-a
setw -g mode-keys vi
set -s escape-time 0  # vim esc delay
set-window-option -g xterm-keys on # for vim
set-window-option -g mode-keys vi # vi key
set-window-option -g monitor-activity off
set -g base-index 1
setw -g pane-base-index 1
set -g renumber-windows on
setw -g automatic-rename
set -g mouse on
set -g history-limit 20000
set -g terminal-overrides 'xterm*:smcup@:rmcup@'
set-option -g status-interval 5
unbind j
unbind C-b # unbind default leader key
unbind '"' # unbind horizontal split
unbind %   # unbind vertical split
bind-key r source-file $HOME/.config/tmux/tmux.conf
bind-key - split-window -v -c "#{pane_current_path}" # split pane horizontally
bind-key v split-window -h -c "#{pane_current_path}" # split pane vertically
bind-key Enter break-pane
bind-key Space command-prompt "joinp -t:%%" # %% = prompt for window.pane [-v|h] # vert|hor split
bind c new-window

# vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
###
setw -g aggressive-resize on
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R
bind-key -r C-h resize-pane -L
bind-key -r C-j resize-pane -D
bind-key -r C-k resize-pane -U
bind-key -r C-l resize-pane -R
bind-key b set status  # Toggle status bar
bind -Tcopy-mode-vi MouseDragEnd1Pane send -X copy-pipe-and-cancel 'xclip -selection c'
bind-key z resize-pane -Z  # Zoom pane

### Experiment: toggle prefix and keybindings for nested
bind -T root C-q \
    set prefix None \;\
    set key-table off \;\
    if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
    refresh-client -S \;\

bind -T off C-q \
    set -u prefix \;\
    set -u key-table \;\
    refresh-client -S

wg_is_keys_off="#[fg=red,bold]#([ $(tmux show-option -qv key-table) = 'off' ] && echo 'OFF')#[default]"

### Theme
# Var def
blue='#00afff'
yellow='#ffff00'
green='#46b52b'
gruv_black='#1d2021'
gruv_white='#eddbb2'

# Set
setw -g mode-style "fg=black, bg=yellow"
set-option -g default-terminal "xterm-256color"
set-option -g pane-active-border-style fg=green
set -g message-style "fg=$gruv_black, bg=$yellow, bold"
set-option -g status-justify left
set-option -g status-bg $gruv_black
set-option -g status-fg $gruv_white
set-option -g status-left "#[fg=$gruv_black, bg=$green, bold] ###S #[default] "
set-option -g status-right "$wg_is_keys_off #[fg=red,bold]#{?window_zoomed_flag,üîç,} #[fg=blue,bold]#T#[default]"
set -g window-status-separator " "
setw -g status-right-length 100
setw -g status-left-length 100
setw -g window-status-current-style "fg=$gruv_black, bg=$blue, bold"
setw -g window-status-current-format " #I:#W* "
set-option -g visual-activity on
set-option -g set-titles on
set-option -g set-titles-string '#H:#S.#I.#P #W #T'
